#!/usr/bin/env bash

function tmux-connect {
    TERM=xterm-256color ssh -p ${3:-22} $1@$2 -t "tmux new-session -s $1 || tmux attach-session -t $1"
}

function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

function tms() {
  local base_path="$1"
  local session_name="$2"

  # Check if the path is provided
  if [ -z "$base_path" ]; then
    echo "Usage: start_tmux_session [session_name] <path>"
    return 1
  fi

  # If no session name is provided, use the last folder name from the path
  if [ -z "$session_name" ]; then
    session_name=$(basename "$base_path")
  fi

  # Determine the JavaScript runtime to use
  local dev_command=""
  if [ -f "$base_path/bun.lockb" ]; then
    dev_command="bun run dev"
  elif [ -f "$base_path/pnpm-lock.yaml" ]; then
    dev_command="pnpm run dev"
  elif [ -f "$base_path/yarn.lock" ]; then
    dev_command="yarn run dev"
  elif [ -f "$base_path/package-lock.json" ]; then
    dev_command="npm run dev"
  elif [ -f "$base_path/deno.json" ] || [ -f "$base_path/deno.jsonc" ]; then
    dev_command="deno task dev"
  else
    dev_command="clear"
  fi

  # Check if session is already running and attach if so
  if tmux has-session -t "$session_name" 2>/dev/null; then
    tmux attach -t "$session_name"
    # Stop here if the session is already running
    return
  elif [ -n "$TMUX" ]; then
    # If already in a tmux session abort
    echo "Already in a tmux session"
  else
    # Start the tmux session with the given session name and path
    tmux new-session -d -s "$session_name" -c "$base_path" -n $session_name "code . && $dev_command"
    tmux split-window -h -t "$session_name":$session_name -c "$base_path"
    tmux attach-session -t "$session_name"
  fi
}

print-colors() {
  local X=$(tput op)
  local Y=$(printf %$((COLUMNS-6))s)
  for i in {0..256}; do
  o=00$i;
  echo -e ${o:${#o}-3:3} $(tput setaf $i;tput setab $i)${Y// /=}$X;
  done
}

meteo() {
  local LOCALE=$(echo ${LANG:-en} | cut -c1-2)
  if [ $# -eq 0 ]; then
    Local LOCATION=$(curl -s ipinfo.io/loc)
  else
    local LOCATION=$1
  fi
  curl -s "$LOCALE.wttr.in/$LOCATION"
}

command-exists() {
    local exists=$(command -v "$1")
    # command does not exist
    if [[ -z $exists ]]; then
        echo 0
    else # command exists
        echo 1
    fi
}

# Commit using commitizen
gcc() {
  if [[ $(command-exists "git-cz") -eq 0 ]]; then
    npm install --global commitizen
  fi
  git-cz
}

